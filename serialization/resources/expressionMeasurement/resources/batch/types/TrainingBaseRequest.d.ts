/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../../../../index";
import * as Hume from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { CustomModelRequest } from "./CustomModelRequest";
import { Dataset } from "./Dataset";
import { Task } from "./Task";
import { EvaluationArgs } from "./EvaluationArgs";
import { Alternative } from "./Alternative";
export declare const TrainingBaseRequest: core.serialization.ObjectSchema<
    serializers.expressionMeasurement.batch.TrainingBaseRequest.Raw,
    Hume.expressionMeasurement.batch.TrainingBaseRequest
>;
export declare namespace TrainingBaseRequest {
    interface Raw {
        custom_model: CustomModelRequest.Raw;
        dataset: Dataset.Raw;
        target_feature?: string | null;
        task?: Task.Raw | null;
        evaluation?: EvaluationArgs.Raw | null;
        alternatives?: Alternative.Raw[] | null;
        callback_url?: string | null;
        notify?: boolean | null;
    }
}
