/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../../../../index";
import * as Hume from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { PositionInterval } from "./PositionInterval";
import { TimeInterval } from "./TimeInterval";
import { EmotionScore } from "./EmotionScore";
import { SentimentScore } from "./SentimentScore";
import { ToxicityScore } from "./ToxicityScore";
export declare const LanguagePrediction: core.serialization.ObjectSchema<
    serializers.expressionMeasurement.batch.LanguagePrediction.Raw,
    Hume.expressionMeasurement.batch.LanguagePrediction
>;
export declare namespace LanguagePrediction {
    interface Raw {
        text: string;
        position: PositionInterval.Raw;
        time?: TimeInterval.Raw | null;
        confidence?: number | null;
        speaker_confidence?: number | null;
        emotions: EmotionScore.Raw[];
        sentiment?: SentimentScore.Raw[] | null;
        toxicity?: ToxicityScore.Raw[] | null;
    }
}
