/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../../../../index";
import * as Hume from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { PositionInterval } from "./PositionInterval";
import { TimeInterval } from "./TimeInterval";
import { EmotionScore } from "./EmotionScore";
export declare const NerPrediction: core.serialization.ObjectSchema<
    serializers.expressionMeasurement.batch.NerPrediction.Raw,
    Hume.expressionMeasurement.batch.NerPrediction
>;
export declare namespace NerPrediction {
    interface Raw {
        entity: string;
        position: PositionInterval.Raw;
        entity_confidence: number;
        support: number;
        uri: string;
        link_word: string;
        time?: TimeInterval.Raw | null;
        confidence?: number | null;
        speaker_confidence?: number | null;
        emotions: EmotionScore.Raw[];
    }
}
