/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../../../../../../index";
import * as Hume from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";
import { Config } from "./Config";
export declare const StreamModelsEndpointPayload: core.serialization.ObjectSchema<
    serializers.expressionMeasurement.stream.StreamModelsEndpointPayload.Raw,
    Hume.expressionMeasurement.stream.StreamModelsEndpointPayload
>;
export declare namespace StreamModelsEndpointPayload {
    interface Raw {
        data?: string | null;
        models?: Config.Raw | null;
        stream_window_ms?: number | null;
        reset_stream?: boolean | null;
        raw_text?: boolean | null;
        job_details?: boolean | null;
        payload_id?: string | null;
    }
}
