/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { HumeClient } from "../../src/Client";

const client = new HumeClient({
    environment: process.env.TESTS_BASE_URL || "test",
    apiKey: process.env.TESTS_AUTH || "test",
});

describe("Tools", () => {
    test("listTools", async () => {
        const response = await client.empathicVoice.tools.listTools({
            pageNumber: 0,
            pageSize: 2,
        });
        expect(response).toEqual({
            pageNumber: 0,
            pageSize: 2,
            toolsPage: [
                {
                    toolType: "FUNCTION",
                    id: "d20827af-5d8d-4f66-b6b9-ce2e3e1ea2b2",
                    version: 0,
                    versionType: "FIXED",
                    versionDescription: "Fetches user's current location.",
                    name: "get_current_location",
                    createdOn: 1715267200693,
                    modifiedOn: 1715267200693,
                    fallbackContent: "Unable to fetch location.",
                    description: "Fetches user's current location.",
                    parameters:
                        '{ "type": "object", "properties": { "location": { "type": "string", "description": "The city and state, e.g. San Francisco, CA" }}, "required": ["location"] }',
                },
                {
                    toolType: "FUNCTION",
                    id: "4442f3ea-9038-40e3-a2ce-1522b7de770f",
                    version: 0,
                    versionType: "FIXED",
                    versionDescription:
                        "Fetches current weather and uses celsius or fahrenheit based on location of user.",
                    name: "get_current_weather",
                    createdOn: 1715266126705,
                    modifiedOn: 1715266126705,
                    fallbackContent: "Unable to fetch location.",
                    description: "Fetches current weather and uses celsius or fahrenheit based on location of user.",
                    parameters:
                        '{ "type": "object", "properties": { "location": { "type": "string", "description": "The city and state, e.g. San Francisco, CA" }, "format": { "type": "string", "enum": ["celsius", "fahrenheit"], "description": "The temperature unit to use. Infer this from the users location." } }, "required": ["location", "format"] }',
                },
            ],
        });
    });

    test("createTool", async () => {
        const response = await client.empathicVoice.tools.createTool({
            name: "get_current_weather",
            parameters:
                '{ "type": "object", "properties": { "location": { "type": "string", "description": "The city and state, e.g. San Francisco, CA" }, "format": { "type": "string", "enum": ["celsius", "fahrenheit"], "description": "The temperature unit to use. Infer this from the users location." } }, "required": ["location", "format"] }',
            versionDescription: "Fetches current weather and uses celsius or fahrenheit based on location of user.",
            description: "This tool is for getting the current weather.",
            fallbackContent: "Unable to fetch current weather.",
        });
        expect(response).toEqual({
            toolType: "FUNCTION",
            id: "aa9b71c4-723c-47ff-9f83-1a1829e74376",
            version: 0,
            versionType: "FIXED",
            versionDescription: "Fetches current weather and uses celsius or fahrenheit based on location of user.",
            name: "get_current_weather",
            createdOn: 1715275452390,
            modifiedOn: 1715275452390,
            fallbackContent: "Unable to fetch current weather.",
            description: "This tool is for getting the current weather.",
            parameters:
                '{ "type": "object", "properties": { "location": { "type": "string", "description": "The city and state, e.g. San Francisco, CA" }, "format": { "type": "string", "enum": ["celsius", "fahrenheit"], "description": "The temperature unit to use. Infer this from the users location." } }, "required": ["location", "format"] }',
        });
    });

    test("listToolVersions", async () => {
        const response = await client.empathicVoice.tools.listToolVersions("00183a3f-79ba-413d-9f3b-609864268bea");
        expect(response).toEqual({
            pageNumber: 0,
            pageSize: 10,
            toolsPage: [
                {
                    toolType: "FUNCTION",
                    id: "00183a3f-79ba-413d-9f3b-609864268bea",
                    version: 1,
                    versionType: "FIXED",
                    versionDescription:
                        "Fetches current weather and uses celsius, fahrenheit, or kelvin based on location of user.",
                    name: "get_current_weather",
                    createdOn: 1715277014228,
                    modifiedOn: 1715277602313,
                    fallbackContent: "Unable to fetch current weather.",
                    description: "This tool is for getting the current weather.",
                    parameters:
                        '{ "type": "object", "properties": { "location": { "type": "string", "description": "The city and state, e.g. San Francisco, CA" }, "format": { "type": "string", "enum": ["celsius", "fahrenheit", "kelvin"], "description": "The temperature unit to use. Infer this from the users location." } }, "required": ["location", "format"] }',
                },
            ],
        });
    });

    test("createToolVersion", async () => {
        const response = await client.empathicVoice.tools.createToolVersion("00183a3f-79ba-413d-9f3b-609864268bea", {
            parameters:
                '{ "type": "object", "properties": { "location": { "type": "string", "description": "The city and state, e.g. San Francisco, CA" }, "format": { "type": "string", "enum": ["celsius", "fahrenheit", "kelvin"], "description": "The temperature unit to use. Infer this from the users location." } }, "required": ["location", "format"] }',
            versionDescription:
                "Fetches current weather and uses celsius, fahrenheit, or kelvin based on location of user.",
            fallbackContent: "Unable to fetch current weather.",
            description: "This tool is for getting the current weather.",
        });
        expect(response).toEqual({
            toolType: "FUNCTION",
            id: "00183a3f-79ba-413d-9f3b-609864268bea",
            version: 1,
            versionType: "FIXED",
            versionDescription:
                "Fetches current weather and uses celsius, fahrenheit, or kelvin based on location of user.",
            name: "get_current_weather",
            createdOn: 1715277014228,
            modifiedOn: 1715277602313,
            fallbackContent: "Unable to fetch current weather.",
            description: "This tool is for getting the current weather.",
            parameters:
                '{ "type": "object", "properties": { "location": { "type": "string", "description": "The city and state, e.g. San Francisco, CA" }, "format": { "type": "string", "enum": ["celsius", "fahrenheit", "kelvin"], "description": "The temperature unit to use. Infer this from the users location." } }, "required": ["location", "format"] }',
        });
    });

    test("deleteTool", async () => {
        const response = await client.empathicVoice.tools.deleteTool("00183a3f-79ba-413d-9f3b-609864268bea");
        expect(response).toEqual(undefined);
    });

    test("updateToolName", async () => {
        const response = await client.empathicVoice.tools.updateToolName("00183a3f-79ba-413d-9f3b-609864268bea", {
            name: "get_current_temperature",
        });
        expect(response).toEqual(undefined);
    });

    test("getToolVersion", async () => {
        const response = await client.empathicVoice.tools.getToolVersion("00183a3f-79ba-413d-9f3b-609864268bea", 1);
        expect(response).toEqual({
            toolType: "FUNCTION",
            id: "00183a3f-79ba-413d-9f3b-609864268bea",
            version: 1,
            versionType: "FIXED",
            versionDescription:
                "Fetches current weather and uses celsius, fahrenheit, or kelvin based on location of user.",
            name: "string",
            createdOn: 1715277014228,
            modifiedOn: 1715277602313,
            fallbackContent: "Unable to fetch current weather.",
            description: "This tool is for getting the current weather.",
            parameters:
                '{ "type": "object", "properties": { "location": { "type": "string", "description": "The city and state, e.g. San Francisco, CA" }, "format": { "type": "string", "enum": ["celsius", "fahrenheit", "kelvin"], "description": "The temperature unit to use. Infer this from the users location." } }, "required": ["location", "format"] }',
        });
    });

    test("deleteToolVersion", async () => {
        const response = await client.empathicVoice.tools.deleteToolVersion("00183a3f-79ba-413d-9f3b-609864268bea", 1);
        expect(response).toEqual(undefined);
    });

    test("updateToolDescription", async () => {
        const response = await client.empathicVoice.tools.updateToolDescription(
            "00183a3f-79ba-413d-9f3b-609864268bea",
            1,
            {
                versionDescription:
                    "Fetches current temperature, precipitation, wind speed, AQI, and other weather conditions. Uses Celsius, Fahrenheit, or kelvin depending on user's region.",
            }
        );
        expect(response).toEqual({
            toolType: "FUNCTION",
            id: "00183a3f-79ba-413d-9f3b-609864268bea",
            version: 1,
            versionType: "FIXED",
            versionDescription:
                "Fetches current temperature, precipitation, wind speed, AQI, and other weather conditions. Uses Celsius, Fahrenheit, or kelvin depending on user's region.",
            name: "string",
            createdOn: 1715277014228,
            modifiedOn: 1715277602313,
            fallbackContent: "Unable to fetch current weather.",
            description: "This tool is for getting the current weather.",
            parameters:
                '{ "type": "object", "properties": { "location": { "type": "string", "description": "The city and state, e.g. San Francisco, CA" }, "format": { "type": "string", "enum": ["celsius", "fahrenheit", "kelvin"], "description": "The temperature unit to use. Infer this from the users location." } }, "required": ["location", "format"] }',
        });
    });
});
