/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool.js";
import { HumeClient } from "../../../src/Client";

describe("Chats", () => {
    test("get-audio", async () => {
        const server = mockServerPool.createServer();
        const client = new HumeClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = {
            id: "470a49f6-1dec-4afe-8b61-035d3b2d63b0",
            user_id: "e6235940-cfda-3988-9147-ff531627cf42",
            status: "COMPLETE",
            filename:
                "e6235940-cfda-3988-9147-ff531627cf42/470a49f6-1dec-4afe-8b61-035d3b2d63b0/reconstructed_audio.mp4",
            modified_at: 1729875432555,
            signed_audio_url: "https://storage.googleapis.com/...etc.",
            signed_url_expiration_timestamp_millis: 1730232816964,
        };
        server
            .mockEndpoint()
            .get("/v0/evi/chats/470a49f6-1dec-4afe-8b61-035d3b2d63b0/audio")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.empathicVoice.chats.getAudio("470a49f6-1dec-4afe-8b61-035d3b2d63b0");
        expect(response).toEqual({
            id: "470a49f6-1dec-4afe-8b61-035d3b2d63b0",
            userId: "e6235940-cfda-3988-9147-ff531627cf42",
            status: "COMPLETE",
            filename:
                "e6235940-cfda-3988-9147-ff531627cf42/470a49f6-1dec-4afe-8b61-035d3b2d63b0/reconstructed_audio.mp4",
            modifiedAt: 1729875432555,
            signedAudioUrl: "https://storage.googleapis.com/...etc.",
            signedUrlExpirationTimestampMillis: 1730232816964,
        });
    });
});
