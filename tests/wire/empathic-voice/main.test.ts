/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool.js";
import { HumeClient } from "../../../src/Client";

describe("EmpathicVoice", () => {
    test("custom_language_model_supports_tool_use_v0_evi_custom_language_model_supports_tool_use_post", async () => {
        const server = mockServerPool.createServer();
        const client = new HumeClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = { model_resource: "model_resource" };
        const rawResponseBody = { model_resource: "model_resource", supports_tool_use: true };
        server
            .mockEndpoint()
            .post("/v0/evi/custom_language_model_supports_tool_use")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response =
            await client.empathicVoice.customLanguageModelSupportsToolUseV0EviCustomLanguageModelSupportsToolUsePost({
                modelResource: "model_resource",
            });
        expect(response).toEqual({
            modelResource: "model_resource",
            supportsToolUse: true,
        });
    });
});
