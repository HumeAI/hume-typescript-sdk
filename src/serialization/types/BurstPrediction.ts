/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Hume from "../../api";
import * as core from "../../core";

export const BurstPrediction: core.serialization.ObjectSchema<
    serializers.BurstPrediction.Raw,
    Hume.BurstPrediction
> = core.serialization.object({
    time: core.serialization.lazyObject(
        async () => (await import("..")).TimeInterval
    ),
    emotions: core.serialization.list(
        core.serialization.lazyObject(
            async () => (await import("..")).EmotionScore
        )
    ),
    descriptions: core.serialization.list(
        core.serialization.lazyObject(
            async () => (await import("..")).DescriptionsScore
        )
    ),
});

export declare namespace BurstPrediction {
    interface Raw {
        time: serializers.TimeInterval.Raw;
        emotions: serializers.EmotionScore.Raw[];
        descriptions: serializers.DescriptionsScore.Raw[];
    }
}
