/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Hume from "../../api";
import * as core from "../../core";

export const Prosody: core.serialization.ObjectSchema<serializers.Prosody.Raw, Hume.Prosody> =
    core.serialization.object({
        granularity: core.serialization.lazy(async () => (await import("..")).Granularity).optional(),
        identifySpeakers: core.serialization.property("identify_speakers", core.serialization.boolean().optional()),
        window: core.serialization.lazyObject(async () => (await import("..")).Window).optional(),
    });

export declare namespace Prosody {
    interface Raw {
        granularity?: serializers.Granularity.Raw | null;
        identify_speakers?: boolean | null;
        window?: serializers.Window.Raw | null;
    }
}
