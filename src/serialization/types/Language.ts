/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Hume from "../../api";
import * as core from "../../core";

export const Language: core.serialization.ObjectSchema<
    serializers.Language.Raw,
    Hume.Language
> = core.serialization.object({
    granularity: core.serialization
        .lazy(async () => (await import("..")).Granularity)
        .optional(),
    identifySpeakers: core.serialization.property(
        "identify_speakers",
        core.serialization.boolean().optional()
    ),
    sentiment: core.serialization
        .lazy(async () => (await import("..")).Empty)
        .optional(),
    toxicity: core.serialization
        .lazy(async () => (await import("..")).Empty)
        .optional(),
});

export declare namespace Language {
    interface Raw {
        granularity?: serializers.Granularity.Raw | null;
        identify_speakers?: boolean | null;
        sentiment?: serializers.Empty.Raw | null;
        toxicity?: serializers.Empty.Raw | null;
    }
}
