/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";
import { VoiceNameEnum } from "./VoiceNameEnum";

export const VoiceArgs: core.serialization.ObjectSchema<
    serializers.empathicVoice.VoiceArgs.Raw,
    Hume.empathicVoice.VoiceArgs
> = core.serialization.object({
    voice: VoiceNameEnum.optional(),
    speechRateMultiplier: core.serialization.property("speech_rate_multiplier", core.serialization.number().optional()),
    baseline: core.serialization.boolean().optional(),
    reconstruct: core.serialization.boolean().optional(),
    additive: core.serialization.boolean().optional(),
    drift: core.serialization.boolean().optional(),
    useV2: core.serialization.property("use_v2", core.serialization.boolean().optional()),
});

export declare namespace VoiceArgs {
    interface Raw {
        voice?: VoiceNameEnum.Raw | null;
        speech_rate_multiplier?: number | null;
        baseline?: boolean | null;
        reconstruct?: boolean | null;
        additive?: boolean | null;
        drift?: boolean | null;
        use_v2?: boolean | null;
    }
}
