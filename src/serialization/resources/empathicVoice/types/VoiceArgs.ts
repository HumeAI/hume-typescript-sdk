/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";
import { VoiceNameEnum } from "./VoiceNameEnum";
import { Features } from "./Features";

export const VoiceArgs: core.serialization.ObjectSchema<
    serializers.empathicVoice.VoiceArgs.Raw,
    Hume.empathicVoice.VoiceArgs
> = core.serialization.object({
    voice: VoiceNameEnum.optional(),
    features: Features.optional(),
    charactersPerSecondRatio: core.serialization.property(
        "characters_per_second_ratio",
        core.serialization.number().optional()
    ),
    baseline: core.serialization.boolean().optional(),
    reconstruct: core.serialization.boolean().optional(),
});

export declare namespace VoiceArgs {
    interface Raw {
        voice?: VoiceNameEnum.Raw | null;
        features?: Features.Raw | null;
        characters_per_second_ratio?: number | null;
        baseline?: boolean | null;
        reconstruct?: boolean | null;
    }
}
