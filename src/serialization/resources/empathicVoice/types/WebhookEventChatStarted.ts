/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as Hume from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import { WebhookEventChatStartType } from "./WebhookEventChatStartType.js";
import { WebhookEventBase } from "./WebhookEventBase.js";

export const WebhookEventChatStarted: core.serialization.ObjectSchema<
    serializers.empathicVoice.WebhookEventChatStarted.Raw,
    Hume.empathicVoice.WebhookEventChatStarted
> = core.serialization
    .object({
        callerNumber: core.serialization.property("caller_number", core.serialization.string().optional()),
        chatStartType: core.serialization.property("chat_start_type", WebhookEventChatStartType),
        customSessionId: core.serialization.property("custom_session_id", core.serialization.string().optional()),
        eventName: core.serialization.property(
            "event_name",
            core.serialization.stringLiteral("chat_started").optional(),
        ),
        startTime: core.serialization.property("start_time", core.serialization.number()),
    })
    .extend(WebhookEventBase);

export declare namespace WebhookEventChatStarted {
    export interface Raw extends WebhookEventBase.Raw {
        caller_number?: string | null;
        chat_start_type: WebhookEventChatStartType.Raw;
        custom_session_id?: string | null;
        event_name?: "chat_started" | null;
        start_time: number;
    }
}
