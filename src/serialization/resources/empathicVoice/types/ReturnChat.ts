/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Hume from "../../../../api";
import * as core from "../../../../core";
import { ReturnConfigSpec } from "./ReturnConfigSpec";

export const ReturnChat: core.serialization.ObjectSchema<
    serializers.empathicVoice.ReturnChat.Raw,
    Hume.empathicVoice.ReturnChat
> = core.serialization.object({
    id: core.serialization.string().optional(),
    resumedFromId: core.serialization.property("resumed_from_id", core.serialization.string().optional()),
    tag: core.serialization.string().optional(),
    status: core.serialization.string().optional(),
    startTimestamp: core.serialization.property("start_timestamp", core.serialization.number().optional()),
    endTimestamp: core.serialization.property("end_timestamp", core.serialization.number().optional()),
    metadata: core.serialization.string().optional(),
    config: ReturnConfigSpec.optional(),
});

export declare namespace ReturnChat {
    interface Raw {
        id?: string | null;
        resumed_from_id?: string | null;
        tag?: string | null;
        status?: string | null;
        start_timestamp?: number | null;
        end_timestamp?: number | null;
        metadata?: string | null;
        config?: ReturnConfigSpec.Raw | null;
    }
}
