/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as Hume from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import { ReturnChatStatus } from "./ReturnChatStatus.js";
import { ReturnConfigSpec } from "./ReturnConfigSpec.js";

export const ReturnChat: core.serialization.ObjectSchema<
    serializers.empathicVoice.ReturnChat.Raw,
    Hume.empathicVoice.ReturnChat
> = core.serialization.object({
    id: core.serialization.string(),
    chatGroupId: core.serialization.property("chat_group_id", core.serialization.string()),
    status: ReturnChatStatus,
    startTimestamp: core.serialization.property("start_timestamp", core.serialization.number()),
    endTimestamp: core.serialization.property("end_timestamp", core.serialization.number().optional()),
    eventCount: core.serialization.property("event_count", core.serialization.number().optional()),
    metadata: core.serialization.string().optional(),
    config: ReturnConfigSpec.optional(),
});

export declare namespace ReturnChat {
    export interface Raw {
        id: string;
        chat_group_id: string;
        status: ReturnChatStatus.Raw;
        start_timestamp: number;
        end_timestamp?: number | null;
        event_count?: number | null;
        metadata?: string | null;
        config?: ReturnConfigSpec.Raw | null;
    }
}
