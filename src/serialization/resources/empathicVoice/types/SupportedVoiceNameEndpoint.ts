/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";
import { VoiceNameEnum } from "./VoiceNameEnum";

export const SupportedVoiceNameEndpoint: core.serialization.ObjectSchema<
    serializers.empathicVoice.SupportedVoiceNameEndpoint.Raw,
    Hume.empathicVoice.SupportedVoiceNameEndpoint
> = core.serialization.object({
    voiceProvider: core.serialization.property("voice_provider", core.serialization.string()),
    voiceName: core.serialization.property("voice_name", VoiceNameEnum),
    previewUrl: core.serialization.property("preview_url", core.serialization.string()),
    requiresEvi2: core.serialization.property("requires_evi_2", core.serialization.boolean()),
});

export declare namespace SupportedVoiceNameEndpoint {
    interface Raw {
        voice_provider: string;
        voice_name: VoiceNameEnum.Raw;
        preview_url: string;
        requires_evi_2: boolean;
    }
}
