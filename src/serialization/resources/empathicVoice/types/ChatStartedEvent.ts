/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";
import { ChatStartType } from "./ChatStartType";
import { WebhookBaseEvent } from "./WebhookBaseEvent";

export const ChatStartedEvent: core.serialization.ObjectSchema<
    serializers.empathicVoice.ChatStartedEvent.Raw,
    Hume.empathicVoice.ChatStartedEvent
> = core.serialization
    .object({
        startTime: core.serialization.property("start_time", core.serialization.number()),
        chatStartType: core.serialization.property("chat_start_type", ChatStartType),
        callerNumber: core.serialization.property("caller_number", core.serialization.string().optional()),
        customSessionId: core.serialization.property("custom_session_id", core.serialization.string().optional()),
    })
    .extend(WebhookBaseEvent);

export declare namespace ChatStartedEvent {
    interface Raw extends WebhookBaseEvent.Raw {
        start_time: number;
        chat_start_type: ChatStartType.Raw;
        caller_number?: string | null;
        custom_session_id?: string | null;
    }
}
