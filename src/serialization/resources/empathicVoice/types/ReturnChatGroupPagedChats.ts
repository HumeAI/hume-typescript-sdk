/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";
import { ReturnChatGroupPagedChatsPaginationDirection } from "./ReturnChatGroupPagedChatsPaginationDirection";
import { ReturnChat } from "./ReturnChat";

export const ReturnChatGroupPagedChats: core.serialization.ObjectSchema<
    serializers.empathicVoice.ReturnChatGroupPagedChats.Raw,
    Hume.empathicVoice.ReturnChatGroupPagedChats
> = core.serialization.object({
    id: core.serialization.string(),
    firstStartTimestamp: core.serialization.property("first_start_timestamp", core.serialization.number()),
    mostRecentStartTimestamp: core.serialization.property("most_recent_start_timestamp", core.serialization.number()),
    numChats: core.serialization.property("num_chats", core.serialization.number()),
    pageNumber: core.serialization.property("page_number", core.serialization.number()),
    pageSize: core.serialization.property("page_size", core.serialization.number()),
    totalPages: core.serialization.property("total_pages", core.serialization.number()),
    paginationDirection: core.serialization.property(
        "pagination_direction",
        ReturnChatGroupPagedChatsPaginationDirection,
    ),
    chatsPage: core.serialization.property("chats_page", core.serialization.list(ReturnChat)),
    active: core.serialization.boolean().optional(),
});

export declare namespace ReturnChatGroupPagedChats {
    export interface Raw {
        id: string;
        first_start_timestamp: number;
        most_recent_start_timestamp: number;
        num_chats: number;
        page_number: number;
        page_size: number;
        total_pages: number;
        pagination_direction: ReturnChatGroupPagedChatsPaginationDirection.Raw;
        chats_page: ReturnChat.Raw[];
        active?: boolean | null;
    }
}
