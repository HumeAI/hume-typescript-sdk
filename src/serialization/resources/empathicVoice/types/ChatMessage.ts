/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from '../../../index';
import * as Hume from '../../../../api/index';
import * as core from '../../../../core';
import { Role } from './Role';
import { ToolCallMessage } from './ToolCallMessage';
import { ChatMessageToolResult } from './ChatMessageToolResult';

export const ChatMessage: core.serialization.ObjectSchema<
  serializers.empathicVoice.ChatMessage.Raw,
  Hume.empathicVoice.ChatMessage
> = core.serialization.object({
  role: Role,
  content: core.serialization.string().optional(),
  toolCall: core.serialization.property(
    'tool_call',
    ToolCallMessage.optional(),
  ),
  toolResult: core.serialization.property(
    'tool_result',
    ChatMessageToolResult.optional(),
  ),
});

export declare namespace ChatMessage {
  interface Raw {
    role: Role.Raw;
    content?: string | null;
    tool_call?: ToolCallMessage.Raw | null;
    tool_result?: ChatMessageToolResult.Raw | null;
  }
}
