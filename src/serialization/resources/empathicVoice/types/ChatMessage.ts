// This file was auto-generated by Fern from our API Definition.

import type * as Hume from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import type * as serializers from "../../../index.js";
import { ChatMessageToolResult } from "./ChatMessageToolResult.js";
import { Role } from "./Role.js";
import { ToolCallMessage } from "./ToolCallMessage.js";

export const ChatMessage: core.serialization.ObjectSchema<
    serializers.empathicVoice.ChatMessage.Raw,
    Hume.empathicVoice.ChatMessage
> = core.serialization.object({
    content: core.serialization.string().optional(),
    role: Role,
    toolCall: core.serialization.property("tool_call", ToolCallMessage.optional()),
    toolResult: core.serialization.property("tool_result", ChatMessageToolResult.optional()),
});

export declare namespace ChatMessage {
    export interface Raw {
        content?: string | null;
        role: Role.Raw;
        tool_call?: ToolCallMessage.Raw | null;
        tool_result?: ChatMessageToolResult.Raw | null;
    }
}
