/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";
import { ReturnSignedUri } from "./ReturnSignedUri";

export const ReturnVoiceOctaveShared: core.serialization.ObjectSchema<
    serializers.empathicVoice.ReturnVoiceOctaveShared.Raw,
    Hume.empathicVoice.ReturnVoiceOctaveShared
> = core.serialization.object({
    id: core.serialization.string().optional(),
    version: core.serialization.number().optional(),
    name: core.serialization.string().optional(),
    description: core.serialization.string().optional(),
    referenceSignedUri: core.serialization.property("reference_signed_uri", ReturnSignedUri.optional()),
    imageUri: core.serialization.property("image_uri", core.serialization.string().optional()),
});

export declare namespace ReturnVoiceOctaveShared {
    export interface Raw {
        id?: string | null;
        version?: number | null;
        name?: string | null;
        description?: string | null;
        reference_signed_uri?: ReturnSignedUri.Raw | null;
        image_uri?: string | null;
    }
}
