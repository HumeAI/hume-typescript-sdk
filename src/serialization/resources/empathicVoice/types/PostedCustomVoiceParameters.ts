/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";

export const PostedCustomVoiceParameters: core.serialization.ObjectSchema<
    serializers.empathicVoice.PostedCustomVoiceParameters.Raw,
    Hume.empathicVoice.PostedCustomVoiceParameters
> = core.serialization.object({
    gender: core.serialization.number().optional(),
    assertiveness: core.serialization.number().optional(),
    buoyancy: core.serialization.number().optional(),
    confidence: core.serialization.number().optional(),
    enthusiasm: core.serialization.number().optional(),
    nasality: core.serialization.number().optional(),
    relaxedness: core.serialization.number().optional(),
    smoothness: core.serialization.number().optional(),
    tepidity: core.serialization.number().optional(),
    tightness: core.serialization.number().optional(),
});

export declare namespace PostedCustomVoiceParameters {
    interface Raw {
        gender?: number | null;
        assertiveness?: number | null;
        buoyancy?: number | null;
        confidence?: number | null;
        enthusiasm?: number | null;
        nasality?: number | null;
        relaxedness?: number | null;
        smoothness?: number | null;
        tepidity?: number | null;
        tightness?: number | null;
    }
}
