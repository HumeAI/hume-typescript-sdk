/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";
import { ModelProviderEnum } from "./ModelProviderEnum";
import { LanguageModelType } from "./LanguageModelType";
import { BuiltinToolType } from "./BuiltinToolType";

export const SupportedLanguageModelEndpoint: core.serialization.ObjectSchema<
    serializers.empathicVoice.SupportedLanguageModelEndpoint.Raw,
    Hume.empathicVoice.SupportedLanguageModelEndpoint
> = core.serialization.object({
    modelProvider: core.serialization.property("model_provider", ModelProviderEnum),
    modelResource: core.serialization.property("model_resource", LanguageModelType),
    builtinTools: core.serialization.property("builtin_tools", core.serialization.list(BuiltinToolType)),
});

export declare namespace SupportedLanguageModelEndpoint {
    interface Raw {
        model_provider: ModelProviderEnum.Raw;
        model_resource: LanguageModelType.Raw;
        builtin_tools: BuiltinToolType.Raw[];
    }
}
