/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";
import { ReturnCustomVoiceBaseVoice } from "./ReturnCustomVoiceBaseVoice";
import { ReturnCustomVoiceParameters } from "./ReturnCustomVoiceParameters";

export const ReturnCustomVoice: core.serialization.ObjectSchema<
    serializers.empathicVoice.ReturnCustomVoice.Raw,
    Hume.empathicVoice.ReturnCustomVoice
> = core.serialization.object({
    id: core.serialization.string(),
    version: core.serialization.number(),
    name: core.serialization.string(),
    createdOn: core.serialization.property("created_on", core.serialization.number()),
    modifiedOn: core.serialization.property("modified_on", core.serialization.number()),
    baseVoice: core.serialization.property("base_voice", ReturnCustomVoiceBaseVoice),
    parameterModel: core.serialization.property(
        "parameter_model",
        core.serialization.stringLiteral("20241004-11parameter")
    ),
    parameters: ReturnCustomVoiceParameters,
});

export declare namespace ReturnCustomVoice {
    interface Raw {
        id: string;
        version: number;
        name: string;
        created_on: number;
        modified_on: number;
        base_voice: ReturnCustomVoiceBaseVoice.Raw;
        parameter_model: "20241004-11parameter";
        parameters: ReturnCustomVoiceParameters.Raw;
    }
}
