/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";

export const WebSocketError: core.serialization.ObjectSchema<
    serializers.empathicVoice.WebSocketError.Raw,
    Hume.empathicVoice.WebSocketError
> = core.serialization.object({
    code: core.serialization.string(),
    customSessionId: core.serialization.property("custom_session_id", core.serialization.string().optional()),
    message: core.serialization.string(),
    requestId: core.serialization.property("request_id", core.serialization.string().optional()),
    slug: core.serialization.string(),
    type: core.serialization.stringLiteral("error"),
});

export declare namespace WebSocketError {
    export interface Raw {
        code: string;
        custom_session_id?: string | null;
        message: string;
        request_id?: string | null;
        slug: string;
        type: "error";
    }
}
