// This file was auto-generated by Fern from our API Definition.

import type * as Hume from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import type * as serializers from "../../../index.js";
import { PostedEventMessageSpec } from "./PostedEventMessageSpec.js";

export const PostedEventMessageSpecs: core.serialization.ObjectSchema<
    serializers.empathicVoice.PostedEventMessageSpecs.Raw,
    Hume.empathicVoice.PostedEventMessageSpecs
> = core.serialization.object({
    onNewChat: core.serialization.property("on_new_chat", PostedEventMessageSpec.optional()),
    onInactivityTimeout: core.serialization.property("on_inactivity_timeout", PostedEventMessageSpec.optional()),
    onMaxDurationTimeout: core.serialization.property("on_max_duration_timeout", PostedEventMessageSpec.optional()),
});

export declare namespace PostedEventMessageSpecs {
    export interface Raw {
        on_new_chat?: PostedEventMessageSpec.Raw | null;
        on_inactivity_timeout?: PostedEventMessageSpec.Raw | null;
        on_max_duration_timeout?: PostedEventMessageSpec.Raw | null;
    }
}
