/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Hume from "../../../../api";
import * as core from "../../../../core";
import { ChatMessage } from "./ChatMessage";
import { Inference } from "./Inference";
import { MillisecondInterval } from "./MillisecondInterval";

export const UserMessage: core.serialization.ObjectSchema<
    serializers.empathicVoice.UserMessage.Raw,
    Hume.empathicVoice.UserMessage
> = core.serialization.object({
    message: ChatMessage,
    models: Inference,
    time: MillisecondInterval,
    type: core.serialization.unknown().optional(),
});

export declare namespace UserMessage {
    interface Raw {
        message: ChatMessage.Raw;
        models: Inference.Raw;
        time: MillisecondInterval.Raw;
        type?: unknown | null;
    }
}
