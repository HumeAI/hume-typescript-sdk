// This file was auto-generated by Fern from our API Definition.

import type * as Hume from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import type * as serializers from "../../../index.js";
import { ReturnChatAudioReconstruction } from "./ReturnChatAudioReconstruction.js";
import { ReturnChatGroupPagedAudioReconstructionsPaginationDirection } from "./ReturnChatGroupPagedAudioReconstructionsPaginationDirection.js";

export const ReturnChatGroupPagedAudioReconstructions: core.serialization.ObjectSchema<
    serializers.empathicVoice.ReturnChatGroupPagedAudioReconstructions.Raw,
    Hume.empathicVoice.ReturnChatGroupPagedAudioReconstructions
> = core.serialization.object({
    id: core.serialization.string(),
    userId: core.serialization.property("user_id", core.serialization.string()),
    numChats: core.serialization.property("num_chats", core.serialization.number()),
    pageNumber: core.serialization.property("page_number", core.serialization.number()),
    pageSize: core.serialization.property("page_size", core.serialization.number()),
    totalPages: core.serialization.property("total_pages", core.serialization.number()),
    paginationDirection: core.serialization.property(
        "pagination_direction",
        ReturnChatGroupPagedAudioReconstructionsPaginationDirection,
    ),
    audioReconstructionsPage: core.serialization.property(
        "audio_reconstructions_page",
        core.serialization.list(ReturnChatAudioReconstruction),
    ),
});

export declare namespace ReturnChatGroupPagedAudioReconstructions {
    export interface Raw {
        id: string;
        user_id: string;
        num_chats: number;
        page_number: number;
        page_size: number;
        total_pages: number;
        pagination_direction: ReturnChatGroupPagedAudioReconstructionsPaginationDirection.Raw;
        audio_reconstructions_page: ReturnChatAudioReconstruction.Raw[];
    }
}
