/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";
import { ToolType } from "./ToolType";

export const Tool: core.serialization.ObjectSchema<serializers.empathicVoice.Tool.Raw, Hume.empathicVoice.Tool> =
    core.serialization.object({
        type: ToolType,
        name: core.serialization.string(),
        parameters: core.serialization.string(),
        description: core.serialization.string().optional(),
        fallbackContent: core.serialization.property("fallback_content", core.serialization.string().optional()),
    });

export declare namespace Tool {
    interface Raw {
        type: ToolType.Raw;
        name: string;
        parameters: string;
        description?: string | null;
        fallback_content?: string | null;
    }
}
