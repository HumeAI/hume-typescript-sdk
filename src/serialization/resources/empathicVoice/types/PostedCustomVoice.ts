/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";

export const PostedCustomVoice: core.serialization.ObjectSchema<
    serializers.empathicVoice.PostedCustomVoice.Raw,
    Hume.empathicVoice.PostedCustomVoice
> = core.serialization.object({
    name: core.serialization.string(),
    baseVoice: core.serialization.property("base_voice", core.serialization.string()),
    parameterModel: core.serialization.property("parameter_model", core.serialization.string()),
    parameters: core.serialization
        .record(core.serialization.string(), core.serialization.number().optional())
        .optional(),
});

export declare namespace PostedCustomVoice {
    interface Raw {
        name: string;
        base_voice: string;
        parameter_model: string;
        parameters?: Record<string, number | null | undefined> | null;
    }
}
