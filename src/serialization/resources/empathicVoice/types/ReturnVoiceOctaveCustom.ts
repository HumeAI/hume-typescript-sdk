/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";
import { ReturnSignedUri } from "./ReturnSignedUri";

export const ReturnVoiceOctaveCustom: core.serialization.ObjectSchema<
    serializers.empathicVoice.ReturnVoiceOctaveCustom.Raw,
    Hume.empathicVoice.ReturnVoiceOctaveCustom
> = core.serialization.object({
    id: core.serialization.string().optional(),
    version: core.serialization.number().optional(),
    name: core.serialization.string().optional(),
    description: core.serialization.string().optional(),
    voiceType: core.serialization.property("voice_type", core.serialization.string().optional()),
    createdOn: core.serialization.property("created_on", core.serialization.number().optional()),
    modifiedOn: core.serialization.property("modified_on", core.serialization.number().optional()),
    voicePrompt: core.serialization.property("voice_prompt", core.serialization.string().optional()),
    normalizationGainDb: core.serialization.property("normalization_gain_db", core.serialization.number().optional()),
    speakerEmbedding: core.serialization.property("speaker_embedding", core.serialization.string().optional()),
    referenceUri: core.serialization.property("reference_uri", core.serialization.string().optional()),
    referenceAudioFormat: core.serialization.property("reference_audio_format", core.serialization.string().optional()),
    cloneReferenceUri: core.serialization.property("clone_reference_uri", core.serialization.string().optional()),
    cloneReferenceAudioFormat: core.serialization.property(
        "clone_reference_audio_format",
        core.serialization.string().optional(),
    ),
    referenceTokens: core.serialization.property("reference_tokens", core.serialization.string().optional()),
    referenceAtoks: core.serialization.property("reference_atoks", core.serialization.string().optional()),
    referenceDecoderDtoks: core.serialization.property(
        "reference_decoder_dtoks",
        core.serialization.string().optional(),
    ),
    referenceText: core.serialization.property("reference_text", core.serialization.string().optional()),
    signedPreviewReferenceUri: core.serialization.property("signed_preview_reference_uri", ReturnSignedUri.optional()),
    signedCloneReferenceUri: core.serialization.property("signed_clone_reference_uri", ReturnSignedUri.optional()),
    imageUri: core.serialization.property("image_uri", core.serialization.string().optional()),
    disabled: core.serialization.boolean().optional(),
});

export declare namespace ReturnVoiceOctaveCustom {
    export interface Raw {
        id?: string | null;
        version?: number | null;
        name?: string | null;
        description?: string | null;
        voice_type?: string | null;
        created_on?: number | null;
        modified_on?: number | null;
        voice_prompt?: string | null;
        normalization_gain_db?: number | null;
        speaker_embedding?: string | null;
        reference_uri?: string | null;
        reference_audio_format?: string | null;
        clone_reference_uri?: string | null;
        clone_reference_audio_format?: string | null;
        reference_tokens?: string | null;
        reference_atoks?: string | null;
        reference_decoder_dtoks?: string | null;
        reference_text?: string | null;
        signed_preview_reference_uri?: ReturnSignedUri.Raw | null;
        signed_clone_reference_uri?: ReturnSignedUri.Raw | null;
        image_uri?: string | null;
        disabled?: boolean | null;
    }
}
