/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";

export const ReturnChatEventType: core.serialization.Schema<
    serializers.empathicVoice.ReturnChatEventType.Raw,
    Hume.empathicVoice.ReturnChatEventType
> = core.serialization.enum_([
    "FUNCTION_CALL",
    "FUNCTION_CALL_RESPONSE",
    "CHAT_END_MESSAGE",
    "AGENT_MESSAGE",
    "SYSTEM_PROMPT",
    "USER_RECORDING_START_MESSAGE",
    "RESUME_ONSET",
    "USER_INTERRUPTION",
    "CHAT_START_MESSAGE",
    "PAUSE_ONSET",
    "USER_MESSAGE",
]);

export declare namespace ReturnChatEventType {
    export type Raw =
        | "FUNCTION_CALL"
        | "FUNCTION_CALL_RESPONSE"
        | "CHAT_END_MESSAGE"
        | "AGENT_MESSAGE"
        | "SYSTEM_PROMPT"
        | "USER_RECORDING_START_MESSAGE"
        | "RESUME_ONSET"
        | "USER_INTERRUPTION"
        | "CHAT_START_MESSAGE"
        | "PAUSE_ONSET"
        | "USER_MESSAGE";
}
