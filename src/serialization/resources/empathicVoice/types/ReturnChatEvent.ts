/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Hume from "../../../../api";
import * as core from "../../../../core";

export const ReturnChatEvent: core.serialization.ObjectSchema<
    serializers.empathicVoice.ReturnChatEvent.Raw,
    Hume.empathicVoice.ReturnChatEvent
> = core.serialization.object({
    id: core.serialization.string().optional(),
    timestamp: core.serialization.number().optional(),
    role: core.serialization.string().optional(),
    type: core.serialization.string().optional(),
    messageText: core.serialization.property("message_text", core.serialization.string().optional()),
    emotionFeatures: core.serialization.property("emotion_features", core.serialization.string().optional()),
    metadata: core.serialization.string().optional(),
});

export declare namespace ReturnChatEvent {
    interface Raw {
        id?: string | null;
        timestamp?: number | null;
        role?: string | null;
        type?: string | null;
        message_text?: string | null;
        emotion_features?: string | null;
        metadata?: string | null;
    }
}
