/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";
import { ReturnChatEventRole } from "./ReturnChatEventRole";
import { ReturnChatEventType } from "./ReturnChatEventType";

export const ReturnChatEvent: core.serialization.ObjectSchema<
    serializers.empathicVoice.ReturnChatEvent.Raw,
    Hume.empathicVoice.ReturnChatEvent
> = core.serialization.object({
    id: core.serialization.string(),
    chatId: core.serialization.property("chat_id", core.serialization.string()),
    timestamp: core.serialization.number(),
    role: ReturnChatEventRole,
    type: ReturnChatEventType,
    messageText: core.serialization.property("message_text", core.serialization.string().optional()),
    emotionFeatures: core.serialization.property("emotion_features", core.serialization.string().optional()),
    metadata: core.serialization.string().optional(),
});

export declare namespace ReturnChatEvent {
    interface Raw {
        id: string;
        chat_id: string;
        timestamp: number;
        role: ReturnChatEventRole.Raw;
        type: ReturnChatEventType.Raw;
        message_text?: string | null;
        emotion_features?: string | null;
        metadata?: string | null;
    }
}
