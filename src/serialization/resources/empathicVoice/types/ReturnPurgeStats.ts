/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";

export const ReturnPurgeStats: core.serialization.ObjectSchema<
    serializers.empathicVoice.ReturnPurgeStats.Raw,
    Hume.empathicVoice.ReturnPurgeStats
> = core.serialization.object({
    id: core.serialization.string().optional(),
    numChats: core.serialization.property("num_chats", core.serialization.number().optional()),
    numChatEvents: core.serialization.property("num_chat_events", core.serialization.number().optional()),
    numConfigs: core.serialization.property("num_configs", core.serialization.number().optional()),
    numPrompts: core.serialization.property("num_prompts", core.serialization.number().optional()),
    numTools: core.serialization.property("num_tools", core.serialization.number().optional()),
    numVoices: core.serialization.property("num_voices", core.serialization.number().optional()),
});

export declare namespace ReturnPurgeStats {
    interface Raw {
        id?: string | null;
        num_chats?: number | null;
        num_chat_events?: number | null;
        num_configs?: number | null;
        num_prompts?: number | null;
        num_tools?: number | null;
        num_voices?: number | null;
    }
}
