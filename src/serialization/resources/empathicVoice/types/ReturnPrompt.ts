/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";
import { ReturnPromptVersionType } from "./ReturnPromptVersionType";

export const ReturnPrompt: core.serialization.ObjectSchema<
    serializers.empathicVoice.ReturnPrompt.Raw,
    Hume.empathicVoice.ReturnPrompt
> = core.serialization.object({
    name: core.serialization.string(),
    id: core.serialization.string(),
    text: core.serialization.string(),
    version: core.serialization.number(),
    versionType: core.serialization.property("version_type", ReturnPromptVersionType),
    versionDescription: core.serialization.property("version_description", core.serialization.string().optional()),
    createdOn: core.serialization.property("created_on", core.serialization.number()),
    modifiedOn: core.serialization.property("modified_on", core.serialization.number()),
});

export declare namespace ReturnPrompt {
    export interface Raw {
        name: string;
        id: string;
        text: string;
        version: number;
        version_type: ReturnPromptVersionType.Raw;
        version_description?: string | null;
        created_on: number;
        modified_on: number;
    }
}
