/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from '../../../index';
import * as Hume from '../../../../api/index';
import * as core from '../../../../core';

export const ReturnPrompt: core.serialization.ObjectSchema<
  serializers.empathicVoice.ReturnPrompt.Raw,
  Hume.empathicVoice.ReturnPrompt
> = core.serialization.object({
  id: core.serialization.string(),
  version: core.serialization.number(),
  versionType: core.serialization.property(
    'version_type',
    core.serialization.string(),
  ),
  versionDescription: core.serialization.property(
    'version_description',
    core.serialization.string().optional(),
  ),
  name: core.serialization.string(),
  createdOn: core.serialization.property(
    'created_on',
    core.serialization.number(),
  ),
  modifiedOn: core.serialization.property(
    'modified_on',
    core.serialization.number(),
  ),
  text: core.serialization.string(),
});

export declare namespace ReturnPrompt {
  interface Raw {
    id: string;
    version: number;
    version_type: string;
    version_description?: string | null;
    name: string;
    created_on: number;
    modified_on: number;
    text: string;
  }
}
