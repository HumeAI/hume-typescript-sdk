/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Hume from "../../../../api";
import * as core from "../../../../core";
import { ChatMessage } from "./ChatMessage";
import { Inference } from "./Inference";

export const AssistantMessage: core.serialization.ObjectSchema<
    serializers.empathicVoice.AssistantMessage.Raw,
    Hume.empathicVoice.AssistantMessage
> = core.serialization.object({
    fromTts: core.serialization.property("from_tts", core.serialization.boolean()),
    id: core.serialization.string().optional(),
    message: ChatMessage,
    models: Inference,
    type: core.serialization.stringLiteral("assistant_message"),
});

export declare namespace AssistantMessage {
    interface Raw {
        from_tts: boolean;
        id?: string | null;
        message: ChatMessage.Raw;
        models: Inference.Raw;
        type: "assistant_message";
    }
}
