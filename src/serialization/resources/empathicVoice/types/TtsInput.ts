/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Hume from "../../../../api";
import * as core from "../../../../core";

export const TtsInput: core.serialization.ObjectSchema<
    serializers.empathicVoice.TtsInput.Raw,
    Hume.empathicVoice.TtsInput
> = core.serialization.object({
    sampleId: core.serialization.property("sample_id", core.serialization.number().optional()),
    speaker: core.serialization.string().optional(),
    text: core.serialization.string(),
    type: core.serialization.stringLiteral("tts").optional(),
});

export declare namespace TtsInput {
    interface Raw {
        sample_id?: number | null;
        speaker?: string | null;
        text: string;
        type?: "tts" | null;
    }
}
