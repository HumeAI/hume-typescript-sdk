/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../index";
import * as Hume from "../../../../../../../api/index";
import * as core from "../../../../../../../core";
import { PostedPromptSpec } from "../../../../types/PostedPromptSpec";
import { PostedVoice } from "../../../../types/PostedVoice";
import { PostedLanguageModel } from "../../../../types/PostedLanguageModel";
import { PostedEllmModel } from "../../../../types/PostedEllmModel";
import { PostedUserDefinedToolSpec } from "../../../../types/PostedUserDefinedToolSpec";
import { PostedBuiltinTool } from "../../../../types/PostedBuiltinTool";
import { PostedEventMessageSpecs } from "../../../../types/PostedEventMessageSpecs";

export const PostedConfigVersion: core.serialization.Schema<
    serializers.empathicVoice.PostedConfigVersion.Raw,
    Hume.empathicVoice.PostedConfigVersion
> = core.serialization.object({
    versionDescription: core.serialization.property("version_description", core.serialization.string().optional()),
    prompt: PostedPromptSpec.optional(),
    voice: PostedVoice.optional(),
    languageModel: core.serialization.property("language_model", PostedLanguageModel.optional()),
    ellmModel: core.serialization.property("ellm_model", PostedEllmModel.optional()),
    tools: core.serialization.list(PostedUserDefinedToolSpec.optional()).optional(),
    builtinTools: core.serialization.property(
        "builtin_tools",
        core.serialization.list(PostedBuiltinTool.optional()).optional()
    ),
    eventMessages: core.serialization.property("event_messages", PostedEventMessageSpecs.optional()),
});

export declare namespace PostedConfigVersion {
    interface Raw {
        version_description?: string | null;
        prompt?: PostedPromptSpec.Raw | null;
        voice?: PostedVoice.Raw | null;
        language_model?: PostedLanguageModel.Raw | null;
        ellm_model?: PostedEllmModel.Raw | null;
        tools?: (PostedUserDefinedToolSpec.Raw | null | undefined)[] | null;
        builtin_tools?: (PostedBuiltinTool.Raw | null | undefined)[] | null;
        event_messages?: PostedEventMessageSpecs.Raw | null;
    }
}
