// This file was auto-generated by Fern from our API Definition.

import type * as Hume from "../../../../../../api/index.js";
import * as core from "../../../../../../core/index.js";
import type * as serializers from "../../../../../index.js";
import { AssistantEnd } from "../../../types/AssistantEnd.js";
import { AssistantMessage } from "../../../types/AssistantMessage.js";
import { AssistantProsody } from "../../../types/AssistantProsody.js";
import { AudioOutput } from "../../../types/AudioOutput.js";
import { ChatMetadata } from "../../../types/ChatMetadata.js";
import { ToolCallMessage } from "../../../types/ToolCallMessage.js";
import { ToolErrorMessage } from "../../../types/ToolErrorMessage.js";
import { ToolResponseMessage } from "../../../types/ToolResponseMessage.js";
import { UserInterruption } from "../../../types/UserInterruption.js";
import { UserMessage } from "../../../types/UserMessage.js";
import { WebSocketError } from "../../../types/WebSocketError.js";

export const SubscribeEvent: core.serialization.Schema<
    serializers.empathicVoice.SubscribeEvent.Raw,
    Hume.empathicVoice.SubscribeEvent
> = core.serialization.undiscriminatedUnion([
    AssistantEnd,
    AssistantMessage,
    AssistantProsody,
    AudioOutput,
    ChatMetadata,
    WebSocketError,
    UserInterruption,
    UserMessage,
    ToolCallMessage,
    ToolResponseMessage,
    ToolErrorMessage,
]);

export declare namespace SubscribeEvent {
    export type Raw =
        | AssistantEnd.Raw
        | AssistantMessage.Raw
        | AssistantProsody.Raw
        | AudioOutput.Raw
        | ChatMetadata.Raw
        | WebSocketError.Raw
        | UserInterruption.Raw
        | UserMessage.Raw
        | ToolCallMessage.Raw
        | ToolResponseMessage.Raw
        | ToolErrorMessage.Raw;
}
