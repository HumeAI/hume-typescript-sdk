/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Hume from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { AudioInput } from "../../../types/AudioInput";
import { SessionSettings } from "../../../types/SessionSettings";
import { UserInput } from "../../../types/UserInput";
import { AssistantInput } from "../../../types/AssistantInput";
import { ToolResponseMessage } from "../../../types/ToolResponseMessage";
import { ToolErrorMessage } from "../../../types/ToolErrorMessage";
import { PauseAssistantMessage } from "../../../types/PauseAssistantMessage";
import { ResumeAssistantMessage } from "../../../types/ResumeAssistantMessage";

export const PublishEvent: core.serialization.Schema<
    serializers.empathicVoice.PublishEvent.Raw,
    Hume.empathicVoice.PublishEvent
> = core.serialization.undiscriminatedUnion([
    AudioInput,
    SessionSettings,
    UserInput,
    AssistantInput,
    ToolResponseMessage,
    ToolErrorMessage,
    PauseAssistantMessage,
    ResumeAssistantMessage,
]);

export declare namespace PublishEvent {
    export type Raw =
        | AudioInput.Raw
        | SessionSettings.Raw
        | UserInput.Raw
        | AssistantInput.Raw
        | ToolResponseMessage.Raw
        | ToolErrorMessage.Raw
        | PauseAssistantMessage.Raw
        | ResumeAssistantMessage.Raw;
}
