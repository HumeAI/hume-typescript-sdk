/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Hume from "../../../../api";
import * as core from "../../../../core";

export const SubscribeEvent: core.serialization.Schema<serializers.SubscribeEvent.Raw, Hume.SubscribeEvent> =
    core.serialization.undiscriminatedUnion([
        core.serialization.lazyObject(async () => (await import("../../..")).ModelResponse),
        core.serialization.lazyObject(async () => (await import("../../..")).WebsocketError),
        core.serialization.lazyObject(async () => (await import("../../..")).WebsocketWarning),
    ]);

export declare namespace SubscribeEvent {
    type Raw = serializers.ModelResponse.Raw | serializers.WebsocketError.Raw | serializers.WebsocketWarning.Raw;
}
