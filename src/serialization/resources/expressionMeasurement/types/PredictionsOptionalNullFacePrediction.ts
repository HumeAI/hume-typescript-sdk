/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";
import { Null } from "./Null";
import { GroupedPredictionsFacePrediction } from "./GroupedPredictionsFacePrediction";

export const PredictionsOptionalNullFacePrediction: core.serialization.ObjectSchema<
    serializers.expressionMeasurement.PredictionsOptionalNullFacePrediction.Raw,
    Hume.expressionMeasurement.PredictionsOptionalNullFacePrediction
> = core.serialization.object({
    metadata: Null.optional(),
    groupedPredictions: core.serialization.property(
        "grouped_predictions",
        core.serialization.list(GroupedPredictionsFacePrediction)
    ),
});

export declare namespace PredictionsOptionalNullFacePrediction {
    interface Raw {
        metadata?: Null.Raw | null;
        grouped_predictions: GroupedPredictionsFacePrediction.Raw[];
    }
}
