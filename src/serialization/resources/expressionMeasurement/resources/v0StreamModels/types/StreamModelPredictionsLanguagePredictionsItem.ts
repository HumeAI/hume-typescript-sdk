/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Hume from "../../../../../../api/index";
import * as core from "../../../../../../core";

export const StreamModelPredictionsLanguagePredictionsItem: core.serialization.ObjectSchema<
    serializers.expressionMeasurement.StreamModelPredictionsLanguagePredictionsItem.Raw,
    Hume.expressionMeasurement.StreamModelPredictionsLanguagePredictionsItem
> = core.serialization.object({
    text: core.serialization.string().optional(),
    position: core.serialization.unknown().optional(),
    emotions: core.serialization.unknown().optional(),
    sentiment: core.serialization.unknown().optional(),
    toxicity: core.serialization.unknown().optional(),
});

export declare namespace StreamModelPredictionsLanguagePredictionsItem {
    interface Raw {
        text?: string | null;
        position?: unknown | null;
        emotions?: unknown | null;
        sentiment?: unknown | null;
        toxicity?: unknown | null;
    }
}
