/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index.js";
import * as Hume from "../../../../../../api/index.js";
import * as core from "../../../../../../core/index.js";
import { Models } from "./Models.js";
import { Transcription } from "./Transcription.js";

export const InferenceBaseRequest: core.serialization.ObjectSchema<
    serializers.expressionMeasurement.batch.InferenceBaseRequest.Raw,
    Hume.expressionMeasurement.batch.InferenceBaseRequest
> = core.serialization.object({
    models: Models.optional(),
    transcription: Transcription.optional(),
    urls: core.serialization.list(core.serialization.string()).optional(),
    text: core.serialization.list(core.serialization.string()).optional(),
    callbackUrl: core.serialization.property("callback_url", core.serialization.string().optional()),
    notify: core.serialization.boolean().optional(),
});

export declare namespace InferenceBaseRequest {
    export interface Raw {
        models?: Models.Raw | null;
        transcription?: Transcription.Raw | null;
        urls?: string[] | null;
        text?: string[] | null;
        callback_url?: string | null;
        notify?: boolean | null;
    }
}
