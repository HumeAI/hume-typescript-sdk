// This file was auto-generated by Fern from our API Definition.

import type * as Hume from "../../../../../../api/index.js";
import * as core from "../../../../../../core/index.js";
import type * as serializers from "../../../../../index.js";
import { StateTlInference } from "./StateTlInference.js";
import { TlInferenceBaseRequest } from "./TlInferenceBaseRequest.js";

export const JobTlInference: core.serialization.ObjectSchema<
    serializers.expressionMeasurement.batch.JobTlInference.Raw,
    Hume.expressionMeasurement.batch.JobTlInference
> = core.serialization.object({
    jobId: core.serialization.property("job_id", core.serialization.string()),
    userId: core.serialization.property("user_id", core.serialization.string()),
    request: TlInferenceBaseRequest,
    state: StateTlInference,
});

export declare namespace JobTlInference {
    export interface Raw {
        job_id: string;
        user_id: string;
        request: TlInferenceBaseRequest.Raw;
        state: StateTlInference.Raw;
    }
}
