/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Hume from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { TranscriptionMetadata } from "./TranscriptionMetadata";
import { GroupedPredictionsLanguagePrediction } from "./GroupedPredictionsLanguagePrediction";

export const PredictionsOptionalTranscriptionMetadataLanguagePrediction: core.serialization.ObjectSchema<
    serializers.expressionMeasurement.PredictionsOptionalTranscriptionMetadataLanguagePrediction.Raw,
    Hume.expressionMeasurement.PredictionsOptionalTranscriptionMetadataLanguagePrediction
> = core.serialization.object({
    metadata: TranscriptionMetadata.optional(),
    groupedPredictions: core.serialization.property(
        "grouped_predictions",
        core.serialization.list(GroupedPredictionsLanguagePrediction)
    ),
});

export declare namespace PredictionsOptionalTranscriptionMetadataLanguagePrediction {
    interface Raw {
        metadata?: TranscriptionMetadata.Raw | null;
        grouped_predictions: GroupedPredictionsLanguagePrediction.Raw[];
    }
}
