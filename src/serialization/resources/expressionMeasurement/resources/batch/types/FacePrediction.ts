// This file was auto-generated by Fern from our API Definition.

import type * as Hume from "../../../../../../api/index.js";
import * as core from "../../../../../../core/index.js";
import type * as serializers from "../../../../../index.js";
import { BoundingBox } from "./BoundingBox.js";
import { DescriptionsScore } from "./DescriptionsScore.js";
import { EmotionScore } from "./EmotionScore.js";
import { FacsScore } from "./FacsScore.js";

export const FacePrediction: core.serialization.ObjectSchema<
    serializers.expressionMeasurement.batch.FacePrediction.Raw,
    Hume.expressionMeasurement.batch.FacePrediction
> = core.serialization.object({
    frame: core.serialization.number(),
    time: core.serialization.number(),
    prob: core.serialization.number(),
    box: BoundingBox,
    emotions: core.serialization.list(EmotionScore),
    facs: core.serialization.list(FacsScore).optional(),
    descriptions: core.serialization.list(DescriptionsScore).optional(),
});

export declare namespace FacePrediction {
    export interface Raw {
        frame: number;
        time: number;
        prob: number;
        box: BoundingBox.Raw;
        emotions: EmotionScore.Raw[];
        facs?: FacsScore.Raw[] | null;
        descriptions?: DescriptionsScore.Raw[] | null;
    }
}
