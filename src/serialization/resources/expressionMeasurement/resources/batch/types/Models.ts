/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index.js";
import * as Hume from "../../../../../../api/index.js";
import * as core from "../../../../../../core/index.js";
import { Face } from "./Face.js";
import { Unconfigurable } from "./Unconfigurable.js";
import { Prosody } from "./Prosody.js";
import { Language } from "./Language.js";
import { Ner } from "./Ner.js";

export const Models: core.serialization.ObjectSchema<
    serializers.expressionMeasurement.batch.Models.Raw,
    Hume.expressionMeasurement.batch.Models
> = core.serialization.object({
    face: Face.optional(),
    burst: Unconfigurable.optional(),
    prosody: Prosody.optional(),
    language: Language.optional(),
    ner: Ner.optional(),
    facemesh: Unconfigurable.optional(),
});

export declare namespace Models {
    export interface Raw {
        face?: Face.Raw | null;
        burst?: Unconfigurable.Raw | null;
        prosody?: Prosody.Raw | null;
        language?: Language.Raw | null;
        ner?: Ner.Raw | null;
        facemesh?: Unconfigurable.Raw | null;
    }
}
