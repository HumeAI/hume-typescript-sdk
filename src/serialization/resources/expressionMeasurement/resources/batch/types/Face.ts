/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index.js";
import * as Hume from "../../../../../../api/index.js";
import * as core from "../../../../../../core/index.js";
import { Unconfigurable } from "./Unconfigurable.js";

export const Face: core.serialization.ObjectSchema<
    serializers.expressionMeasurement.batch.Face.Raw,
    Hume.expressionMeasurement.batch.Face
> = core.serialization.object({
    fpsPred: core.serialization.property("fps_pred", core.serialization.number().optional()),
    probThreshold: core.serialization.property("prob_threshold", core.serialization.number().optional()),
    identifyFaces: core.serialization.property("identify_faces", core.serialization.boolean().optional()),
    minFaceSize: core.serialization.property("min_face_size", core.serialization.number().optional()),
    facs: Unconfigurable.optional(),
    descriptions: Unconfigurable.optional(),
    saveFaces: core.serialization.property("save_faces", core.serialization.boolean().optional()),
});

export declare namespace Face {
    export interface Raw {
        fps_pred?: number | null;
        prob_threshold?: number | null;
        identify_faces?: boolean | null;
        min_face_size?: number | null;
        facs?: Unconfigurable.Raw | null;
        descriptions?: Unconfigurable.Raw | null;
        save_faces?: boolean | null;
    }
}
