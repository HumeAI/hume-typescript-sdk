// This file was auto-generated by Fern from our API Definition.

import type * as Hume from "../../../../../../api/index.js";
import * as core from "../../../../../../core/index.js";
import type * as serializers from "../../../../../index.js";
import { GroupedPredictionsNerPrediction } from "./GroupedPredictionsNerPrediction.js";
import { TranscriptionMetadata } from "./TranscriptionMetadata.js";

export const PredictionsOptionalTranscriptionMetadataNerPrediction: core.serialization.ObjectSchema<
    serializers.expressionMeasurement.batch.PredictionsOptionalTranscriptionMetadataNerPrediction.Raw,
    Hume.expressionMeasurement.batch.PredictionsOptionalTranscriptionMetadataNerPrediction
> = core.serialization.object({
    metadata: TranscriptionMetadata.optional(),
    groupedPredictions: core.serialization.property(
        "grouped_predictions",
        core.serialization.list(GroupedPredictionsNerPrediction),
    ),
});

export declare namespace PredictionsOptionalTranscriptionMetadataNerPrediction {
    export interface Raw {
        metadata?: TranscriptionMetadata.Raw | null;
        grouped_predictions: GroupedPredictionsNerPrediction.Raw[];
    }
}
