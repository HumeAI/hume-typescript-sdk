/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index.js";
import * as Hume from "../../../../../../api/index.js";
import * as core from "../../../../../../core/index.js";
import { EmbeddingGenerationBaseRequest } from "./EmbeddingGenerationBaseRequest.js";
import { StateEmbeddingGeneration } from "./StateEmbeddingGeneration.js";

export const JobEmbeddingGeneration: core.serialization.ObjectSchema<
    serializers.expressionMeasurement.batch.JobEmbeddingGeneration.Raw,
    Hume.expressionMeasurement.batch.JobEmbeddingGeneration
> = core.serialization.object({
    jobId: core.serialization.property("job_id", core.serialization.string()),
    userId: core.serialization.property("user_id", core.serialization.string()),
    request: EmbeddingGenerationBaseRequest,
    state: StateEmbeddingGeneration,
});

export declare namespace JobEmbeddingGeneration {
    export interface Raw {
        job_id: string;
        user_id: string;
        request: EmbeddingGenerationBaseRequest.Raw;
        state: StateEmbeddingGeneration.Raw;
    }
}
