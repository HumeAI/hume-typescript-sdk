// This file was auto-generated by Fern from our API Definition.

import type * as Hume from "../../../../../../api/index.js";
import * as core from "../../../../../../core/index.js";
import type * as serializers from "../../../../../index.js";
import { InferenceRequest } from "./InferenceRequest.js";
import { StateInference } from "./StateInference.js";

export const JobInference: core.serialization.ObjectSchema<
    serializers.expressionMeasurement.batch.JobInference.Raw,
    Hume.expressionMeasurement.batch.JobInference
> = core.serialization.object({
    jobId: core.serialization.property("job_id", core.serialization.string()),
    request: InferenceRequest,
    state: StateInference,
});

export declare namespace JobInference {
    export interface Raw {
        job_id: string;
        request: InferenceRequest.Raw;
        state: StateInference.Raw;
    }
}
