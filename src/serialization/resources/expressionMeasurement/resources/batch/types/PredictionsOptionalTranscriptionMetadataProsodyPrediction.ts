/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index.js";
import * as Hume from "../../../../../../api/index.js";
import * as core from "../../../../../../core/index.js";
import { TranscriptionMetadata } from "./TranscriptionMetadata.js";
import { GroupedPredictionsProsodyPrediction } from "./GroupedPredictionsProsodyPrediction.js";

export const PredictionsOptionalTranscriptionMetadataProsodyPrediction: core.serialization.ObjectSchema<
    serializers.expressionMeasurement.batch.PredictionsOptionalTranscriptionMetadataProsodyPrediction.Raw,
    Hume.expressionMeasurement.batch.PredictionsOptionalTranscriptionMetadataProsodyPrediction
> = core.serialization.object({
    metadata: TranscriptionMetadata.optional(),
    groupedPredictions: core.serialization.property(
        "grouped_predictions",
        core.serialization.list(GroupedPredictionsProsodyPrediction),
    ),
});

export declare namespace PredictionsOptionalTranscriptionMetadataProsodyPrediction {
    export interface Raw {
        metadata?: TranscriptionMetadata.Raw | null;
        grouped_predictions: GroupedPredictionsProsodyPrediction.Raw[];
    }
}
