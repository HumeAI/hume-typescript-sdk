/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from '../../../../../index';
import * as Hume from '../../../../../../api/index';
import * as core from '../../../../../../core';
import { EmotionEmbedding } from '../../../types/EmotionEmbedding';
import { EmotionEmbeddingItem } from '../../../types/EmotionEmbeddingItem';

export const StreamBurstFacemeshPredictionsItem: core.serialization.ObjectSchema<
  serializers.expressionMeasurement.StreamBurstFacemeshPredictionsItem.Raw,
  Hume.expressionMeasurement.StreamBurstFacemeshPredictionsItem
> = core.serialization.object({
  emotions: EmotionEmbedding.optional(),
});

export declare namespace StreamBurstFacemeshPredictionsItem {
  interface Raw {
    emotions?: EmotionEmbedding.Raw | null;
  }
}
