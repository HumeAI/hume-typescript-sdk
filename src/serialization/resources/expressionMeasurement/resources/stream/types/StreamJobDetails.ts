/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from '../../../../../index';
import * as Hume from '../../../../../../api/index';
import * as core from '../../../../../../core';
import { StreamJobDetailsJobDetails } from './StreamJobDetailsJobDetails';

export const StreamJobDetails: core.serialization.ObjectSchema<
  serializers.expressionMeasurement.StreamJobDetails.Raw,
  Hume.expressionMeasurement.StreamJobDetails
> = core.serialization.object({
  warning: core.serialization.string().optional(),
  code: core.serialization.string().optional(),
  payloadId: core.serialization.property(
    'payload_id',
    core.serialization.string().optional(),
  ),
  jobDetails: core.serialization.property(
    'job_details',
    StreamJobDetailsJobDetails.optional(),
  ),
});

export declare namespace StreamJobDetails {
  interface Raw {
    warning?: string | null;
    code?: string | null;
    payload_id?: string | null;
    job_details?: StreamJobDetailsJobDetails.Raw | null;
  }
}
