/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from '../../../../../index';
import * as Hume from '../../../../../../api/index';
import * as core from '../../../../../../core';
import { StreamBurstFacePredictionsItem } from './StreamBurstFacePredictionsItem';

export const StreamBurstFace: core.serialization.ObjectSchema<
  serializers.expressionMeasurement.StreamBurstFace.Raw,
  Hume.expressionMeasurement.StreamBurstFace
> = core.serialization.object({
  predictions: core.serialization
    .list(StreamBurstFacePredictionsItem)
    .optional(),
});

export declare namespace StreamBurstFace {
  interface Raw {
    predictions?: StreamBurstFacePredictionsItem.Raw[] | null;
  }
}
