// This file was auto-generated by Fern from our API Definition.

import type * as Hume from "../../../../../../../../api/index.js";
import * as core from "../../../../../../../../core/index.js";
import type * as serializers from "../../../../../../../index.js";
import { JobDetails } from "./JobDetails.js";

export const StreamErrorMessage: core.serialization.ObjectSchema<
    serializers.expressionMeasurement.stream.StreamErrorMessage.Raw,
    Hume.expressionMeasurement.stream.StreamErrorMessage
> = core.serialization.object({
    error: core.serialization.string().optional(),
    code: core.serialization.string().optional(),
    payloadId: core.serialization.property("payload_id", core.serialization.string().optional()),
    jobDetails: core.serialization.property("job_details", JobDetails.optional()),
});

export declare namespace StreamErrorMessage {
    export interface Raw {
        error?: string | null;
        code?: string | null;
        payload_id?: string | null;
        job_details?: JobDetails.Raw | null;
    }
}
