// This file was auto-generated by Fern from our API Definition.

import type * as Hume from "../../../../../../../../api/index.js";
import * as core from "../../../../../../../../core/index.js";
import type * as serializers from "../../../../../../../index.js";
import { EmotionEmbedding } from "../../../types/EmotionEmbedding.js";
import { TimeRange } from "../../../types/TimeRange.js";

export const StreamModelPredictionsBurstPredictionsItem: core.serialization.ObjectSchema<
    serializers.expressionMeasurement.stream.StreamModelPredictionsBurstPredictionsItem.Raw,
    Hume.expressionMeasurement.stream.StreamModelPredictionsBurstPredictionsItem
> = core.serialization.object({
    time: TimeRange.optional(),
    emotions: EmotionEmbedding.optional(),
});

export declare namespace StreamModelPredictionsBurstPredictionsItem {
    export interface Raw {
        time?: TimeRange.Raw | null;
        emotions?: EmotionEmbedding.Raw | null;
    }
}
