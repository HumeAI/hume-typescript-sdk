/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index.js";
import * as Hume from "../../../../../../../../api/index.js";
import * as core from "../../../../../../../../core/index.js";
import { TextPosition } from "../../../types/TextPosition.js";
import { EmotionEmbedding } from "../../../types/EmotionEmbedding.js";
import { Sentiment } from "../../../types/Sentiment.js";
import { Toxicity } from "../../../types/Toxicity.js";
import { EmotionEmbeddingItem } from "../../../types/EmotionEmbeddingItem.js";
import { SentimentItem } from "../../../types/SentimentItem.js";
import { ToxicityItem } from "../../../types/ToxicityItem.js";

export const StreamModelPredictionsLanguagePredictionsItem: core.serialization.ObjectSchema<
    serializers.expressionMeasurement.stream.StreamModelPredictionsLanguagePredictionsItem.Raw,
    Hume.expressionMeasurement.stream.StreamModelPredictionsLanguagePredictionsItem
> = core.serialization.object({
    text: core.serialization.string().optional(),
    position: TextPosition.optional(),
    emotions: EmotionEmbedding.optional(),
    sentiment: Sentiment.optional(),
    toxicity: Toxicity.optional(),
});

export declare namespace StreamModelPredictionsLanguagePredictionsItem {
    export interface Raw {
        text?: string | null;
        position?: TextPosition.Raw | null;
        emotions?: EmotionEmbedding.Raw | null;
        sentiment?: Sentiment.Raw | null;
        toxicity?: Toxicity.Raw | null;
    }
}
