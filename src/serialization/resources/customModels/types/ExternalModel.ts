/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Hume from "../../../../api";
import * as core from "../../../../core";
import { ExternalModelVersion } from "./ExternalModelVersion";

export const ExternalModel: core.serialization.ObjectSchema<
    serializers.customModels.ExternalModel.Raw,
    Hume.customModels.ExternalModel
> = core.serialization.object({
    id: core.serialization.string(),
    name: core.serialization.string(),
    createdOn: core.serialization.property("created_on", core.serialization.number()),
    modifiedOn: core.serialization.property("modified_on", core.serialization.number()),
    totalStars: core.serialization.property("total_stars", core.serialization.number()),
    modelIsStarredByUser: core.serialization.property("model_is_starred_by_user", core.serialization.boolean()),
    archived: core.serialization.boolean(),
    latestVersion: core.serialization.property("latest_version", ExternalModelVersion.optional()),
    isPubliclyShared: core.serialization.property("is_publicly_shared", core.serialization.boolean()),
});

export declare namespace ExternalModel {
    interface Raw {
        id: string;
        name: string;
        created_on: number;
        modified_on: number;
        total_stars: number;
        model_is_starred_by_user: boolean;
        archived: boolean;
        latest_version?: ExternalModelVersion.Raw | null;
        is_publicly_shared: boolean;
    }
}
