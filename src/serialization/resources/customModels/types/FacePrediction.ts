/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Hume from "../../../../api";
import * as core from "../../../../core";
import { BoundingBox } from "./BoundingBox";
import { EmotionScore } from "./EmotionScore";
import { FacsScore } from "./FacsScore";
import { DescriptionsScore } from "./DescriptionsScore";

export const FacePrediction: core.serialization.ObjectSchema<
    serializers.customModels.FacePrediction.Raw,
    Hume.customModels.FacePrediction
> = core.serialization.object({
    frame: core.serialization.number(),
    time: core.serialization.number(),
    prob: core.serialization.number(),
    box: BoundingBox,
    emotions: core.serialization.list(EmotionScore),
    facs: core.serialization.list(FacsScore).optional(),
    descriptions: core.serialization.list(DescriptionsScore).optional(),
});

export declare namespace FacePrediction {
    interface Raw {
        frame: number;
        time: number;
        prob: number;
        box: BoundingBox.Raw;
        emotions: EmotionScore.Raw[];
        facs?: FacsScore.Raw[] | null;
        descriptions?: DescriptionsScore.Raw[] | null;
    }
}
