/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";
import { Timestamp } from "./Timestamp";

export const Snippet: core.serialization.ObjectSchema<serializers.tts.Snippet.Raw, Hume.tts.Snippet> =
    core.serialization.object({
        id: core.serialization.string(),
        text: core.serialization.string(),
        generationId: core.serialization.property("generation_id", core.serialization.string()),
        utteranceIndex: core.serialization.property("utterance_index", core.serialization.number().optional()),
        timestamps: core.serialization.list(Timestamp).optional(),
        transcribedText: core.serialization.property("transcribed_text", core.serialization.string().optional()),
        audio: core.serialization.string(),
    });

export declare namespace Snippet {
    export interface Raw {
        id: string;
        text: string;
        generation_id: string;
        utterance_index?: number | null;
        timestamps?: Timestamp.Raw[] | null;
        transcribed_text?: string | null;
        audio: string;
    }
}
