/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";
import { TimestampMessage } from "./TimestampMessage";
import { SnippetAudioChunk } from "./SnippetAudioChunk";

export const TtsOutput: core.serialization.Schema<serializers.tts.TtsOutput.Raw, Hume.tts.TtsOutput> =
    core.serialization
        .union("type", {
            timestamp: TimestampMessage,
            audio: SnippetAudioChunk,
        })
        .transform<Hume.tts.TtsOutput>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace TtsOutput {
    export type Raw = TtsOutput.Timestamp | TtsOutput.Audio;

    export interface Timestamp extends TimestampMessage.Raw {
        type: "timestamp";
    }

    export interface Audio extends SnippetAudioChunk.Raw {
        type: "audio";
    }
}
