/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";
import { TimestampMessage } from "./TimestampMessage";
import { SnippetAudioChunk } from "./SnippetAudioChunk";

export const SynthesizeJsonStreamingResponse: core.serialization.Schema<
    serializers.tts.SynthesizeJsonStreamingResponse.Raw,
    Hume.tts.SynthesizeJsonStreamingResponse
> = core.serialization
    .union("type", {
        timestamp: TimestampMessage,
        audio: SnippetAudioChunk,
    })
    .transform<Hume.tts.SynthesizeJsonStreamingResponse>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace SynthesizeJsonStreamingResponse {
    export type Raw = SynthesizeJsonStreamingResponse.Timestamp | SynthesizeJsonStreamingResponse.Audio;

    export interface Timestamp extends TimestampMessage.Raw {
        type: "timestamp";
    }

    export interface Audio extends SnippetAudioChunk.Raw {
        type: "audio";
    }
}
