/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";
import { PostedUtteranceVoice } from "./PostedUtteranceVoice";

export const PublishTts: core.serialization.ObjectSchema<serializers.tts.PublishTts.Raw, Hume.tts.PublishTts> =
    core.serialization.object({
        close: core.serialization.boolean().optional(),
        description: core.serialization.string().optional(),
        flush: core.serialization.boolean().optional(),
        speed: core.serialization.number().optional(),
        text: core.serialization.string().optional(),
        trailingSilence: core.serialization.property("trailing_silence", core.serialization.number().optional()),
        voice: PostedUtteranceVoice.optional(),
    });

export declare namespace PublishTts {
    export interface Raw {
        close?: boolean | null;
        description?: string | null;
        flush?: boolean | null;
        speed?: number | null;
        text?: string | null;
        trailing_silence?: number | null;
        voice?: PostedUtteranceVoice.Raw | null;
    }
}
