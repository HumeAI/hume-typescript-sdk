/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";
import { Context } from "./Context";
import { Format } from "./Format";
import { PostedUtterance } from "./PostedUtterance";

export const OctaveBodyArgsFile: core.serialization.ObjectSchema<
    serializers.tts.OctaveBodyArgsFile.Raw,
    Hume.tts.OctaveBodyArgsFile
> = core.serialization.object({
    context: Context.optional(),
    expandDescription: core.serialization.property("expand_description", core.serialization.boolean().optional()),
    filterGenerations: core.serialization.property("filter_generations", core.serialization.boolean().optional()),
    format: Format.optional(),
    model: core.serialization.stringLiteral("octave").optional(),
    splitUtterances: core.serialization.property("split_utterances", core.serialization.boolean().optional()),
    utterances: core.serialization.list(PostedUtterance),
});

export declare namespace OctaveBodyArgsFile {
    interface Raw {
        context?: Context.Raw | null;
        expand_description?: boolean | null;
        filter_generations?: boolean | null;
        format?: Format.Raw | null;
        model?: "octave" | null;
        split_utterances?: boolean | null;
        utterances: PostedUtterance.Raw[];
    }
}
