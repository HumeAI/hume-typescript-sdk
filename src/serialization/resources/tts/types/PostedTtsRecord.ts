/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hume from "../../../../api/index";
import * as core from "../../../../core";

export const PostedTtsRecord: core.serialization.ObjectSchema<
    serializers.tts.PostedTtsRecord.Raw,
    Hume.tts.PostedTtsRecord
> = core.serialization.object({
    createdOn: core.serialization.property("created_on", core.serialization.number()),
    id: core.serialization.string(),
    internalMetadata: core.serialization.property("internal_metadata", core.serialization.string()),
    messageText: core.serialization.property("message_text", core.serialization.string()),
    parentId: core.serialization.property("parent_id", core.serialization.string().optional()),
    requestPayload: core.serialization.property("request_payload", core.serialization.string()),
});

export declare namespace PostedTtsRecord {
    interface Raw {
        created_on: number;
        id: string;
        internal_metadata: string;
        message_text: string;
        parent_id?: string | null;
        request_payload: string;
    }
}
