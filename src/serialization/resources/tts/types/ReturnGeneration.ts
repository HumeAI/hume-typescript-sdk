/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as Hume from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import { AudioEncoding } from "./AudioEncoding.js";
import { Snippet } from "./Snippet.js";

export const ReturnGeneration: core.serialization.ObjectSchema<
    serializers.tts.ReturnGeneration.Raw,
    Hume.tts.ReturnGeneration
> = core.serialization.object({
    audio: core.serialization.string(),
    duration: core.serialization.number(),
    encoding: AudioEncoding,
    fileSize: core.serialization.property("file_size", core.serialization.number()),
    generationId: core.serialization.property("generation_id", core.serialization.string()),
    snippets: core.serialization.list(core.serialization.list(Snippet)),
});

export declare namespace ReturnGeneration {
    export interface Raw {
        audio: string;
        duration: number;
        encoding: AudioEncoding.Raw;
        file_size: number;
        generation_id: string;
        snippets: Snippet.Raw[][];
    }
}
