/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../environments.js";
import * as core from "../../../../core/index.js";
import { Tools } from "../resources/tools/client/Client.js";
import { Prompts } from "../resources/prompts/client/Client.js";
import { Configs } from "../resources/configs/client/Client.js";
import { Chats } from "../resources/chats/client/Client.js";
import { ChatGroups } from "../resources/chatGroups/client/Client.js";
import { Chat } from "../resources/chat/client/Client.js";

export declare namespace EmpathicVoice {
    export interface Options {
        environment?: core.Supplier<environments.HumeEnvironment | environments.HumeEnvironmentUrls | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        apiKey?: core.Supplier<string | undefined>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | null | undefined> | null | undefined>;
    }
}

export class EmpathicVoice {
    protected readonly _options: EmpathicVoice.Options;
    protected _tools: Tools | undefined;
    protected _prompts: Prompts | undefined;
    protected _configs: Configs | undefined;
    protected _chats: Chats | undefined;
    protected _chatGroups: ChatGroups | undefined;
    protected _chat: Chat | undefined;

    constructor(_options: EmpathicVoice.Options = {}) {
        this._options = _options;
    }

    public get tools(): Tools {
        return (this._tools ??= new Tools(this._options));
    }

    public get prompts(): Prompts {
        return (this._prompts ??= new Prompts(this._options));
    }

    public get configs(): Configs {
        return (this._configs ??= new Configs(this._options));
    }

    public get chats(): Chats {
        return (this._chats ??= new Chats(this._options));
    }

    public get chatGroups(): ChatGroups {
        return (this._chatGroups ??= new ChatGroups(this._options));
    }

    public get chat(): Chat {
        return (this._chat ??= new Chat(this._options));
    }
}
