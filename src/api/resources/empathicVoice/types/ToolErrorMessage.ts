/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Hume from '../../../index';

/**
 * When provided, the output is a function call error.
 */
export interface ToolErrorMessage {
  /**
   * The type of message sent through the socket; for a Tool Error message, this must be `tool_error`.
   *
   * Upon receiving a [Tool Call message](/reference/empathic-voice-interface-evi/chat/chat#receive.Tool%20Call%20Message.type) and failing to invoke the function, this message is sent to notify EVI of the tool's failure.
   */
  type: 'tool_error';
  /** Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions. */
  customSessionId?: string;
  /** Type of tool called. Either `builtin` for natively implemented tools, like web search, or `function` for user-defined tools. */
  toolType?: Hume.empathicVoice.ToolType;
  /**
   * The unique identifier for a specific tool call instance.
   *
   * This ID is used to track the request and response of a particular tool invocation, ensuring that the Tool Error message is linked to the appropriate tool call request. The specified `tool_call_id` must match the one received in the [Tool Call message](/reference/empathic-voice-interface-evi/chat/chat#receive.Tool%20Call%20Message.type).
   */
  toolCallId: string;
  /** Optional text passed to the supplemental LLM in place of the tool call result. The LLM then uses this text to generate a response back to the user, ensuring continuity in the conversation if the tool errors. */
  content?: string;
  /** Error message from the tool call, not exposed to the LLM or user. */
  error: string;
  /** Error code. Identifies the type of error encountered. */
  code?: string;
  /** Indicates the severity of an error; for a Tool Error message, this must be `warn` to signal an unexpected event. */
  level?: Hume.empathicVoice.ErrorLevel;
}
