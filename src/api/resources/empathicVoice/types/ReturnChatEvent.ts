/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Hume from "../../../index";

/**
 * A description of a single event in a chat returned from the server
 */
export interface ReturnChatEvent {
    /** Identifier for a Chat Event. Formatted as a UUID. */
    id: string;
    /** Identifier for the Chat this event occurred in. Formatted as a UUID. */
    chatId: string;
    /** Time at which the Chat Event occurred. Measured in seconds since the Unix epoch. */
    timestamp: number;
    /**
     * The role of the entity which generated the Chat Event. There are four possible values:
     *
     * - `USER`: The user, capable of sending user messages and interruptions.
     *
     * - `AGENT`: The assistant, capable of sending agent messages.
     *
     * - `SYSTEM`: The backend server, capable of transmitting errors.
     *
     * - `TOOL`: The function calling mechanism.
     */
    role: Hume.empathicVoice.ReturnChatEventRole;
    /** The type of chat event. Values from the ChatEventType enum. */
    type: string;
    /** The text of the chat message, either transcribed from speaker audio or generated by the agent. */
    messageText?: string;
    /** Stringified JSON with data about emotional content/prosody of the event. */
    emotionFeatures?: string;
    /** Stringified JSON with additional metadata about the chat event. */
    metadata?: string;
}
