/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Hume from "../../../../../index";

export type StateTlInference =
    | Hume.expressionMeasurement.batch.StateTlInference.Queued
    | Hume.expressionMeasurement.batch.StateTlInference.InProgress
    | Hume.expressionMeasurement.batch.StateTlInference.Completed
    | Hume.expressionMeasurement.batch.StateTlInference.Failed;

export namespace StateTlInference {
    export interface Queued extends Hume.expressionMeasurement.batch.StateTlInferenceQueued {
        status: "QUEUED";
    }

    export interface InProgress extends Hume.expressionMeasurement.batch.StateTlInferenceInProgress {
        status: "IN_PROGRESS";
    }

    export interface Completed extends Hume.expressionMeasurement.batch.StateTlInferenceCompletedTlInference {
        status: "COMPLETED";
    }

    export interface Failed extends Hume.expressionMeasurement.batch.StateTlInferenceFailed {
        status: "FAILED";
    }
}
